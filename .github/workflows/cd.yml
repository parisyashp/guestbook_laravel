# .github/workflows/cd.yml
name: Laravel CD Pipeline (Manual Deploy)

# This workflow can be triggered manually from the GitHub Actions UI.
on:
  workflow_dispatch:
    # No inputs defined for this simple setup, but you could add them (e.g., to select a specific tag to deploy).

jobs:
  # The Deploy Job
  deploy:
    runs-on: ubuntu-latest # GitHub-hosted runner for executing SSH commands
    environment: production # Designates this as a production deployment (useful for GitHub's UI)

    steps:
      - name: Copy Docker Compose files to Server
        uses: appleboy/scp-action@v1.0.0 # Action to copy files over SSH
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: |
            docker-compose.yml
            docker/nginx/default.conf
          target: "/home/${{ secrets.SSH_USERNAME }}/guestbook_app"
      
      - name: Deploy Application with Docker Compose
        uses: appleboy/ssh-action@v1.0.0 # A popular GitHub Action for running commands over SSH
        with:
          host: ${{ secrets.SSH_HOST }}             # Uses the GitHub Secret for your server's IP address
          username: ${{ secrets.SSH_USERNAME }}     # Uses the GitHub Secret for your SSH username on the server
          key: ${{ secrets.SSH_PRIVATE_KEY }}       # Uses the GitHub Secret for your SSH private key

          # The 'script' section contains the commands to be executed on your remote server
          script: |
           echo "--- Starting Deployment on Server ---"

           mkdir -p /home/${{ secrets.SSH_USERNAME }}/guestbook_app
           cd /home/${{ secrets.SSH_USERNAME }}/guestbook_app

           echo "Pulling Docker Compose service images..."
            docker compose pull
        
            echo "Stopping and removing existing containers (if running)..."
            docker compose down || true

            echo "Bringing up new Docker Compose services..."
            docker compose up -d

            echo "Waiting for containers to fully start up (30 seconds for all services)..."
            sleep 30

            
            echo "Running database migrations on the application container..."
            docker compose exec app php artisan migrate --force

            echo "--- Deployment Complete! ---"