# .github/workflows/cd.yml
name: Laravel CD Pipeline (Manual Deploy)

# This workflow can be triggered manually from the GitHub Actions UI.
on:
  workflow_dispatch:
    # No inputs defined for this simple setup, but you could add them (e.g., to select a specific tag to deploy).

jobs:
  # The Deploy Job
  deploy:
    runs-on: ubuntu-latest # GitHub-hosted runner for executing SSH commands
    environment: production # Designates this as a production deployment (useful for GitHub's UI)

    steps:
      - name: Deploy to Server via SSH
        uses: appleboy/ssh-action@v1.0.0 # A popular GitHub Action for running commands over SSH
        with:
          host: ${{ secrets.SSH_HOST }}             # Uses the GitHub Secret for your server's IP address
          username: ${{ secrets.SSH_USERNAME }}     # Uses the GitHub Secret for your SSH username on the server
          key: ${{ secrets.SSH_PRIVATE_KEY }}       # Uses the GitHub Secret for your SSH private key

          # The 'script' section contains the commands to be executed on your remote server
          script: |
           echo "--- Starting Deployment on Server ---"

            echo "Pulling latest application Docker image: parisyashp31/guestbook-laravel:latest"
            docker pull parisyashp31/guestbook-laravel:latest

            echo "Pulling MySQL Docker image: mysql:8.0"
            docker pull mysql:8.0

        
            echo "Stopping and removing existing containers (if running)..."
            docker stop guestbook-app || true
            docker rm guestbook-app || true
            docker stop guestbook-db || true
            docker rm guestbook-db || true

            
            echo "Running new database container named 'guestbook-db'..."
            docker run -d \
              --name guestbook-db \
              -p 3306:3306 \
              -e MYSQL_DATABASE=${{ secrets.DB_DATABASE }} \
              -e MYSQL_ROOT_PASSWORD=root_password \
              -e MYSQL_USER=${{ secrets.DB_USERNAME }} \
              -e MYSQL_PASSWORD=${{ secrets.DB_PASSWORD }} \
              mysql:8.0

           
            echo "Running new application container named 'guestbook-app'..."
            docker run -d \
              --name guestbook-app \
              -p 80:80 \
              -e APP_NAME=Guestbook \
              -e APP_ENV=production \
              -e APP_DEBUG=false \
              -e APP_URL=http://${{ secrets.SSH_HOST }} \
              -e APP_KEY=${{ secrets.APP_KEY }} \
              -e DB_CONNECTION=mysql \
              -e DB_HOST=guestbook-db \
              -e DB_PORT=3306 \
              -e DB_DATABASE=${{ secrets.DB_DATABASE }} \
              -e DB_USERNAME=${{ secrets.DB_USERNAME }} \
              -e DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
              parisyashp31/guestbook-laravel:latest

            
            echo "Waiting for both containers to fully start up (20 seconds for DB and app)..."
            sleep 20

        
            echo "Running database migrations on the new container..."
            docker exec guestbook-app php artisan migrate --force

            echo "--- Deployment Complete! ---"